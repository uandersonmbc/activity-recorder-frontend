[{"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\App.tsx":"1","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\utils\\time.tsx":"2","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Main\\index.tsx":"3","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\routes\\index.tsx":"4","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Dashboard\\index.tsx":"5","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Dashboard\\daysWeek.tsx":"6","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Reports\\index.tsx":"7","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\PDF\\index.tsx":"8","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\index.tsx":"9","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\SingIn\\index.tsx":"10","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\services\\api.ts":"11","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\components\\ColumnCharts\\ColumnCharts.tsx":"12","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Reports\\Report.tsx":"13","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\components\\ColumnCharts\\index.ts":"14","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\components\\PieCharts\\PieCharts.tsx":"15","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\components\\PieCharts\\index.tsx":"16"},{"size":359,"mtime":1607039540335,"results":"17","hashOfConfig":"18"},{"size":1126,"mtime":1607809555943,"results":"19","hashOfConfig":"18"},{"size":2661,"mtime":1608057582887,"results":"20","hashOfConfig":"18"},{"size":426,"mtime":1607829419568,"results":"21","hashOfConfig":"18"},{"size":5427,"mtime":1608057454565,"results":"22","hashOfConfig":"18"},{"size":8036,"mtime":1608006211040,"results":"23","hashOfConfig":"18"},{"size":56,"mtime":1608058471345,"results":"24","hashOfConfig":"18"},{"size":664,"mtime":1607837360941,"results":"25","hashOfConfig":"18"},{"size":212,"mtime":1606667406748,"results":"26","hashOfConfig":"18"},{"size":2343,"mtime":1606682338168,"results":"27","hashOfConfig":"18"},{"size":353,"mtime":1606680667225,"results":"28","hashOfConfig":"18"},{"size":1654,"mtime":1608257829731,"results":"29","hashOfConfig":"18"},{"size":3222,"mtime":1608258789624,"results":"30","hashOfConfig":"18"},{"size":74,"mtime":1608058007099,"results":"31","hashOfConfig":"18"},{"size":797,"mtime":1608242936158,"results":"32","hashOfConfig":"18"},{"size":65,"mtime":1608242542026,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"13im3ug",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\App.tsx",[],["75"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\utils\\time.tsx",[],["76"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Main\\index.tsx",["77"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\routes\\index.tsx",["78"],"import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Main from '../screens/Main';\r\nimport SingIn from '../screens/SingIn';\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/login\">\r\n        <SingIn />\r\n      </Route>\r\n\r\n      <Route path=\"/\">\r\n        <Main />\r\n      </Route>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n",["79"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Dashboard\\index.tsx",["80","81","82"],"import React, { useEffect, useState } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nimport { Table, Loading, Tag, DatePicker } from 'element-react';\r\nimport moment from 'moment';\r\n\r\nimport { Week, Hour } from '../../models/types';\r\nimport { toHourString, typesHours } from '../../utils/time';\r\nimport Api from './../../services/api';\r\nimport DaysWeek from './daysWeek';\r\n\r\nimport './index.css';\r\n\r\nconst propsTable = {\r\n  emptyText: 'Sem dados para mostar',\r\n};\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [user, setUser] = useState<{ name: string; email: string }>();\r\n  const [dataWeek, setDataWeek] = useState<Week[]>([]);\r\n  const [weekTotal, setWeekTotal] = useState('00:00');\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentWeek, setCurrentWeek] = useState(moment().toISOString());\r\n  const [totalMonth, setTotalMonth] = useState<Hour>();\r\n\r\n  async function createWeeks() {\r\n    setLoading(true);\r\n    try {\r\n      const init = moment(currentWeek);\r\n      const params = {\r\n        start: init.day(0).format('YYYY-MM-DD'),\r\n        end: init.day(6).format('YYYY-MM-DD'),\r\n      };\r\n      const { data } = await Api.get('workedhours', { params });\r\n      const week: Week[] = [0, 1, 2, 3, 4, 5, 6].map((e) => {\r\n        const date = init.day(e).format('YYYY-MM-DD');\r\n        const w = data.find(\r\n          (w: Week) =>\r\n            moment(w.start_date_timestamp).format('YYYY-MM-DD') === date,\r\n        );\r\n        const hour = { hours: 0, minutes: 0, seconds: 0 };\r\n        return {\r\n          dayWeek: date,\r\n          pause: w ? w.pause : hour,\r\n          coffee: w ? w.coffee : hour,\r\n          lunch: w ? w.lunch : hour,\r\n          absent: w ? w.absent : hour,\r\n          total: w ? w.total : hour,\r\n          start_date_timestamp: w ? w.start_date_timestamp : '',\r\n          end_date_timestamp: w ? w.end_date_timestamp : '',\r\n        };\r\n      });\r\n      console.log(week);\r\n      setDataWeek(week);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchWeekTotal() {\r\n    try {\r\n      const params = {\r\n        start: moment(currentWeek).day(0).format('YYYY-MM-DD'),\r\n        end: moment(currentWeek).day(6).format('YYYY-MM-DD'),\r\n        weekTotal: true,\r\n      };\r\n      const { data } = await Api.get('workedhours', { params });\r\n      setWeekTotal(toHourString(data[0].total));\r\n    } catch (error) {\r\n      setWeekTotal('00:00');\r\n    }\r\n  }\r\n\r\n  function updateDad() {\r\n    fetchWeekTotal();\r\n    createWeeks();\r\n  }\r\n\r\n  async function getTotalMonth() {\r\n    const params = {\r\n      month: '2020-12',\r\n    };\r\n    try {\r\n      const { data } = await Api.get('reports', { params });\r\n      setTotalMonth(data[0].total);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      type: 'expand',\r\n      // eslint-disable-next-line\r\n      expandPannel: function (date: Week) {\r\n        return <DaysWeek date={date.dayWeek} updateDad={() => updateDad()} />;\r\n      },\r\n    },\r\n    {\r\n      label: 'Dia',\r\n      prop: '',\r\n      width: 150,\r\n      // eslint-disable-next-line\r\n      render: (row: any) => (\r\n        <Moment locale=\"pt-br\" format=\"ddd DD/MMM/YYYY\">\r\n          {row.dayWeek}\r\n        </Moment>\r\n      ),\r\n    },\r\n    {\r\n      label: 'Entrada',\r\n      prop: 'start_date_timestamp',\r\n      width: 90,\r\n      // eslint-disable-next-line\r\n      render: (row: any) =>\r\n        row.start_date_timestamp && (\r\n          <Tag type=\"success\">\r\n            <Moment format=\"HH:mm\">{row.start_date_timestamp}</Moment>\r\n          </Tag>\r\n        ),\r\n    },\r\n    {\r\n      label: 'SaÃ­da',\r\n      prop: 'end_date_timestamp',\r\n      width: 90,\r\n      // eslint-disable-next-line\r\n      render: (row: any) =>\r\n        row.end_date_timestamp && (\r\n          <Tag type=\"danger\">\r\n            <Moment format=\"HH:mm\">{row.end_date_timestamp}</Moment>\r\n          </Tag>\r\n        ),\r\n    },\r\n\r\n    {\r\n      label: 'Pausas',\r\n      prop: '',\r\n      // eslint-disable-next-line\r\n      render: (row: any) => {\r\n        return (\r\n          <>\r\n            {typesHours('coffee', row.coffee)}\r\n            {typesHours('lunch', row.lunch)}\r\n            {typesHours('absent', row.absent)}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      label: 'Total trabalhado ',\r\n      align: 'right',\r\n      prop: '',\r\n      width: 150,\r\n      // eslint-disable-next-line\r\n      render: (row: any) => {\r\n        return row.total && <Tag>{toHourString(row.total)}</Tag>;\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    createWeeks();\r\n    fetchWeekTotal();\r\n    getTotalMonth();\r\n  }, [currentWeek]);\r\n\r\n  return (\r\n    <Loading loading={loading}>\r\n      <div className=\"between\">\r\n        <DatePicker\r\n          value={currentWeek}\r\n          placeholder=\"Escolha a semana\"\r\n          onChange={(date) => {\r\n            setCurrentWeek(date);\r\n            console.debug(date);\r\n          }}\r\n          format=\"dd/MM/yyyy\"\r\n          selectionMode=\"week\"\r\n        />\r\n        <div>\r\n          Total do mÃªs <Tag>{totalMonth && toHourString(totalMonth)}</Tag>\r\n        </div>\r\n      </div>\r\n      <Table\r\n        className=\"table-week\"\r\n        columns={columns}\r\n        data={dataWeek}\r\n        {...propsTable}\r\n      />\r\n      <div className=\"total-week\">\r\n        <span>Total da semana: {weekTotal}</span>\r\n      </div>\r\n    </Loading>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Dashboard\\daysWeek.tsx",["83","84","85"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Reports\\index.tsx",[],["86"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\PDF\\index.tsx",[],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\index.tsx",[],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\SingIn\\index.tsx",["87","88","89"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Input, Button, Layout, Notification } from 'element-react';\r\n\r\nimport Api from './../../services/api';\r\nimport { login } from './../../services/auth';\r\n\r\nimport './index.css';\r\nimport logo from './../../assets/Logo-dark.png';\r\n\r\nconst SingIn: React.FC = (props) => {\r\n  const [username, setUsername] = useState<\r\n    React.SyntheticEvent<HTMLInputElement>\r\n  >();\r\n  const [password, setPassword] = useState<\r\n    React.SyntheticEvent<HTMLInputElement>\r\n  >();\r\n\r\n  console.log(props);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loginAuth = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const credentials = {\r\n        email: username,\r\n        password: password,\r\n      };\r\n      const { data } = await Api.post('login', credentials);\r\n      login(data.token);\r\n    } catch (error) {\r\n      Notification.warning({\r\n        title: 'AtenÃ§Ã£o',\r\n        message: error.response.data.errors[0].message,\r\n      });\r\n      console.log(error.response);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <Layout.Row gutter=\"10\">\r\n        <Layout.Col\r\n          span=\"12\"\r\n          xs=\"24\"\r\n          sm=\"12\"\r\n          md=\"12\"\r\n          lg=\"12\"\r\n          className=\"center\"\r\n        >\r\n          <img src={logo} alt=\"\" className=\"form-image\" />\r\n        </Layout.Col>\r\n        <Layout.Col\r\n          span=\"12\"\r\n          xs=\"24\"\r\n          sm=\"12\"\r\n          md=\"12\"\r\n          lg=\"12\"\r\n          className=\"center\"\r\n        >\r\n          <form className=\"form-body\">\r\n            <Input\r\n              className=\"form-input\"\r\n              placeholder=\"UsuÃ¡rio\"\r\n              value={username}\r\n              onChange={setUsername}\r\n            />\r\n            <Input\r\n              className=\"form-input\"\r\n              placeholder=\"Senha\"\r\n              value={password}\r\n              onChange={setPassword}\r\n            />\r\n            <Button\r\n              className=\"form-button\"\r\n              style={{ marginTop: 20 }}\r\n              loading={loading}\r\n              type=\"success\"\r\n              onClick={loginAuth}\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </Layout.Col>\r\n      </Layout.Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingIn;\r\n",["90"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\services\\api.ts",[],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\components\\ColumnCharts\\ColumnCharts.tsx",["91"],"import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\ninterface ColumnChartsProps {\r\n  data: number[];\r\n  labels: string[];\r\n  potential?: number[];\r\n}\r\n\r\nconst ColumnCharts: React.FC<ColumnChartsProps> = ({\r\n  data,\r\n  labels,\r\n  potential,\r\n}) => {\r\n  const series = [\r\n    {\r\n      name: 'Total',\r\n      type: 'column',\r\n      data: data,\r\n    },\r\n    {\r\n      name: 'Esperado',\r\n      type: 'line',\r\n      data: potential,\r\n    },\r\n  ];\r\n\r\n  const options = {\r\n    chart: {\r\n      height: 350,\r\n      type: 'line',\r\n      stacked: false,\r\n    },\r\n    stroke: {\r\n      width: [0, 5, 0],\r\n      curve: 'straight',\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '50%',\r\n      },\r\n    },\r\n\r\n    fill: {\r\n      opacity: [0.85, 0.25, 1],\r\n      gradient: {\r\n        inverseColors: false,\r\n        shade: 'light',\r\n        type: 'vertical',\r\n        opacityFrom: 0.85,\r\n        opacityTo: 0.55,\r\n        stops: [0, 100, 100, 100],\r\n      },\r\n    },\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    xaxis: {\r\n      categories: labels,\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Horas',\r\n      },\r\n      min: 0,\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: function (y: any) {\r\n          if (typeof y !== 'undefined') {\r\n            return y.toFixed(0) + ' horas';\r\n          }\r\n          return y;\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart\r\n        options={options}\r\n        series={series}\r\n        type=\"line\"\r\n        height={350}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnCharts;\r\n","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Reports\\Report.tsx",["92","93","94"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\components\\ColumnCharts\\index.ts",[],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\components\\PieCharts\\PieCharts.tsx",[],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\components\\PieCharts\\index.tsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"95","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":42,"column":6,"nodeType":"100","endLine":42,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":32,"nodeType":"104","messageId":"105","endLine":2,"endColumn":38},{"ruleId":"95","replacedBy":"106"},{"ruleId":"102","severity":1,"message":"107","line":19,"column":10,"nodeType":"104","messageId":"105","endLine":19,"endColumn":14},{"ruleId":"102","severity":1,"message":"108","line":19,"column":16,"nodeType":"104","messageId":"105","endLine":19,"endColumn":23},{"ruleId":"98","severity":1,"message":"109","line":167,"column":6,"nodeType":"100","endLine":167,"endColumn":19,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"111","line":26,"column":10,"nodeType":"104","messageId":"105","endLine":26,"endColumn":17},{"ruleId":"102","severity":1,"message":"112","line":26,"column":19,"nodeType":"104","messageId":"105","endLine":26,"endColumn":29},{"ruleId":"98","severity":1,"message":"113","line":158,"column":6,"nodeType":"100","endLine":158,"endColumn":8,"suggestions":"114"},{"ruleId":"95","replacedBy":"115"},{"ruleId":"102","severity":1,"message":"116","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":6,"column":1,"nodeType":"119","endLine":6,"endColumn":47},{"ruleId":"117","severity":1,"message":"120","line":9,"column":1,"nodeType":"119","endLine":9,"endColumn":49},{"ruleId":"95","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":71,"column":33,"nodeType":"124","messageId":"125","endLine":71,"endColumn":36,"suggestions":"126"},{"ruleId":"102","severity":1,"message":"127","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":19},{"ruleId":"102","severity":1,"message":"128","line":18,"column":10,"nodeType":"104","messageId":"105","endLine":18,"endColumn":17},{"ruleId":"98","severity":1,"message":"129","line":71,"column":6,"nodeType":"100","endLine":71,"endColumn":23,"suggestions":"130"},"jsx-a11y/accessible-emoji",[],[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["131"],"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar",[],"'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createWeeks' and 'fetchWeekTotal'. Either include them or remove the dependency array.",["132"],"'popover' is assigned a value but never used.","'setPopover' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array.",["133"],[],"'useEffect' is defined but never used.","import-helpers/order-imports","There should be no empty line within import group","ImportDeclaration","`./../../assets/Logo-dark.png` import should occur before import of `./../../services/api`",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["134","135"],"'stringify' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'barData'. Either include it or remove the dependency array.",["136"],{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"messageId":"143","fix":"144","desc":"145"},{"messageId":"146","fix":"147","desc":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [history]",{"range":"151","text":"152"},"Update the dependencies array to be: [createWeeks, currentWeek, fetchWeekTotal]",{"range":"153","text":"154"},"Update the dependencies array to be: [date]",{"range":"155","text":"156"},"suggestUnknown",{"range":"157","text":"158"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"157","text":"159"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [barData, dataYearOrMonth]",{"range":"160","text":"161"},[1034,1036],"[history]",[4633,4646],"[createWeeks, currentWeek, fetchWeekTotal]",[4144,4146],"[date]",[1270,1273],"unknown","never",[2098,2115],"[barData, dataYearOrMonth]"]
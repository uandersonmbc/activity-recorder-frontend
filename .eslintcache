[{"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\App.tsx":"1","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\utils\\time.tsx":"2","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Main\\index.tsx":"3","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\routes\\index.tsx":"4","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Dashboard\\index.tsx":"5","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Dashboard\\daysWeek.tsx":"6","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Reports\\index.tsx":"7","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\PDF\\index.tsx":"8","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\index.tsx":"9","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\SingIn\\index.tsx":"10","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\services\\api.ts":"11"},{"size":359,"mtime":1607039540335,"results":"12","hashOfConfig":"13"},{"size":1126,"mtime":1607809555943,"results":"14","hashOfConfig":"13"},{"size":2661,"mtime":1608057582887,"results":"15","hashOfConfig":"13"},{"size":426,"mtime":1607829419568,"results":"16","hashOfConfig":"13"},{"size":5427,"mtime":1608057454565,"results":"17","hashOfConfig":"13"},{"size":8036,"mtime":1608006211040,"results":"18","hashOfConfig":"13"},{"size":130,"mtime":1607809555942,"results":"19","hashOfConfig":"13"},{"size":664,"mtime":1607837360941,"results":"20","hashOfConfig":"13"},{"size":212,"mtime":1606667406748,"results":"21","hashOfConfig":"13"},{"size":2343,"mtime":1606682338168,"results":"22","hashOfConfig":"13"},{"size":353,"mtime":1606680667225,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13im3ug",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\App.tsx",[],["51"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\utils\\time.tsx",[],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Main\\index.tsx",["52"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\routes\\index.tsx",["53"],"import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Main from '../screens/Main';\r\nimport SingIn from '../screens/SingIn';\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/login\">\r\n        <SingIn />\r\n      </Route>\r\n\r\n      <Route path=\"/\">\r\n        <Main />\r\n      </Route>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Dashboard\\index.tsx",["54","55","56"],"import React, { useEffect, useState } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nimport { Table, Loading, Tag, DatePicker } from 'element-react';\r\nimport moment from 'moment';\r\n\r\nimport { Week, Hour } from '../../models/types';\r\nimport { toHourString, typesHours } from '../../utils/time';\r\nimport Api from './../../services/api';\r\nimport DaysWeek from './daysWeek';\r\n\r\nimport './index.css';\r\n\r\nconst propsTable = {\r\n  emptyText: 'Sem dados para mostar',\r\n};\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [user, setUser] = useState<{ name: string; email: string }>();\r\n  const [dataWeek, setDataWeek] = useState<Week[]>([]);\r\n  const [weekTotal, setWeekTotal] = useState('00:00');\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentWeek, setCurrentWeek] = useState(moment().toISOString());\r\n  const [totalMonth, setTotalMonth] = useState<Hour>();\r\n\r\n  async function createWeeks() {\r\n    setLoading(true);\r\n    try {\r\n      const init = moment(currentWeek);\r\n      const params = {\r\n        start: init.day(0).format('YYYY-MM-DD'),\r\n        end: init.day(6).format('YYYY-MM-DD'),\r\n      };\r\n      const { data } = await Api.get('workedhours', { params });\r\n      const week: Week[] = [0, 1, 2, 3, 4, 5, 6].map((e) => {\r\n        const date = init.day(e).format('YYYY-MM-DD');\r\n        const w = data.find(\r\n          (w: Week) =>\r\n            moment(w.start_date_timestamp).format('YYYY-MM-DD') === date,\r\n        );\r\n        const hour = { hours: 0, minutes: 0, seconds: 0 };\r\n        return {\r\n          dayWeek: date,\r\n          pause: w ? w.pause : hour,\r\n          coffee: w ? w.coffee : hour,\r\n          lunch: w ? w.lunch : hour,\r\n          absent: w ? w.absent : hour,\r\n          total: w ? w.total : hour,\r\n          start_date_timestamp: w ? w.start_date_timestamp : '',\r\n          end_date_timestamp: w ? w.end_date_timestamp : '',\r\n        };\r\n      });\r\n      console.log(week);\r\n      setDataWeek(week);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchWeekTotal() {\r\n    try {\r\n      const params = {\r\n        start: moment(currentWeek).day(0).format('YYYY-MM-DD'),\r\n        end: moment(currentWeek).day(6).format('YYYY-MM-DD'),\r\n        weekTotal: true,\r\n      };\r\n      const { data } = await Api.get('workedhours', { params });\r\n      setWeekTotal(toHourString(data[0].total));\r\n    } catch (error) {\r\n      setWeekTotal('00:00');\r\n    }\r\n  }\r\n\r\n  function updateDad() {\r\n    fetchWeekTotal();\r\n    createWeeks();\r\n  }\r\n\r\n  async function getTotalMonth() {\r\n    const params = {\r\n      month: '2020-12',\r\n    };\r\n    try {\r\n      const { data } = await Api.get('reports', { params });\r\n      setTotalMonth(data[0].total);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      type: 'expand',\r\n      // eslint-disable-next-line\r\n      expandPannel: function (date: Week) {\r\n        return <DaysWeek date={date.dayWeek} updateDad={() => updateDad()} />;\r\n      },\r\n    },\r\n    {\r\n      label: 'Dia',\r\n      prop: '',\r\n      width: 150,\r\n      // eslint-disable-next-line\r\n      render: (row: any) => (\r\n        <Moment locale=\"pt-br\" format=\"ddd DD/MMM/YYYY\">\r\n          {row.dayWeek}\r\n        </Moment>\r\n      ),\r\n    },\r\n    {\r\n      label: 'Entrada',\r\n      prop: 'start_date_timestamp',\r\n      width: 90,\r\n      // eslint-disable-next-line\r\n      render: (row: any) =>\r\n        row.start_date_timestamp && (\r\n          <Tag type=\"success\">\r\n            <Moment format=\"HH:mm\">{row.start_date_timestamp}</Moment>\r\n          </Tag>\r\n        ),\r\n    },\r\n    {\r\n      label: 'Saída',\r\n      prop: 'end_date_timestamp',\r\n      width: 90,\r\n      // eslint-disable-next-line\r\n      render: (row: any) =>\r\n        row.end_date_timestamp && (\r\n          <Tag type=\"danger\">\r\n            <Moment format=\"HH:mm\">{row.end_date_timestamp}</Moment>\r\n          </Tag>\r\n        ),\r\n    },\r\n\r\n    {\r\n      label: 'Pausas',\r\n      prop: '',\r\n      // eslint-disable-next-line\r\n      render: (row: any) => {\r\n        return (\r\n          <>\r\n            {typesHours('coffee', row.coffee)}\r\n            {typesHours('lunch', row.lunch)}\r\n            {typesHours('absent', row.absent)}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      label: 'Total trabalhado ',\r\n      align: 'right',\r\n      prop: '',\r\n      width: 150,\r\n      // eslint-disable-next-line\r\n      render: (row: any) => {\r\n        return row.total && <Tag>{toHourString(row.total)}</Tag>;\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    createWeeks();\r\n    fetchWeekTotal();\r\n    getTotalMonth();\r\n  }, [currentWeek]);\r\n\r\n  return (\r\n    <Loading loading={loading}>\r\n      <div className=\"between\">\r\n        <DatePicker\r\n          value={currentWeek}\r\n          placeholder=\"Escolha a semana\"\r\n          onChange={(date) => {\r\n            setCurrentWeek(date);\r\n            console.debug(date);\r\n          }}\r\n          format=\"dd/MM/yyyy\"\r\n          selectionMode=\"week\"\r\n        />\r\n        <div>\r\n          Total do mês <Tag>{totalMonth && toHourString(totalMonth)}</Tag>\r\n        </div>\r\n      </div>\r\n      <Table\r\n        className=\"table-week\"\r\n        columns={columns}\r\n        data={dataWeek}\r\n        {...propsTable}\r\n      />\r\n      <div className=\"total-week\">\r\n        <span>Total da semana: {weekTotal}</span>\r\n      </div>\r\n    </Loading>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Dashboard\\daysWeek.tsx",["57","58","59"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\Reports\\index.tsx",[],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\PDF\\index.tsx",[],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\index.tsx",[],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\screens\\SingIn\\index.tsx",["60","61","62"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Input, Button, Layout, Notification } from 'element-react';\r\n\r\nimport Api from './../../services/api';\r\nimport { login } from './../../services/auth';\r\n\r\nimport './index.css';\r\nimport logo from './../../assets/Logo-dark.png';\r\n\r\nconst SingIn: React.FC = (props) => {\r\n  const [username, setUsername] = useState<\r\n    React.SyntheticEvent<HTMLInputElement>\r\n  >();\r\n  const [password, setPassword] = useState<\r\n    React.SyntheticEvent<HTMLInputElement>\r\n  >();\r\n\r\n  console.log(props);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loginAuth = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const credentials = {\r\n        email: username,\r\n        password: password,\r\n      };\r\n      const { data } = await Api.post('login', credentials);\r\n      login(data.token);\r\n    } catch (error) {\r\n      Notification.warning({\r\n        title: 'Atenção',\r\n        message: error.response.data.errors[0].message,\r\n      });\r\n      console.log(error.response);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <Layout.Row gutter=\"10\">\r\n        <Layout.Col\r\n          span=\"12\"\r\n          xs=\"24\"\r\n          sm=\"12\"\r\n          md=\"12\"\r\n          lg=\"12\"\r\n          className=\"center\"\r\n        >\r\n          <img src={logo} alt=\"\" className=\"form-image\" />\r\n        </Layout.Col>\r\n        <Layout.Col\r\n          span=\"12\"\r\n          xs=\"24\"\r\n          sm=\"12\"\r\n          md=\"12\"\r\n          lg=\"12\"\r\n          className=\"center\"\r\n        >\r\n          <form className=\"form-body\">\r\n            <Input\r\n              className=\"form-input\"\r\n              placeholder=\"Usuário\"\r\n              value={username}\r\n              onChange={setUsername}\r\n            />\r\n            <Input\r\n              className=\"form-input\"\r\n              placeholder=\"Senha\"\r\n              value={password}\r\n              onChange={setPassword}\r\n            />\r\n            <Button\r\n              className=\"form-button\"\r\n              style={{ marginTop: 20 }}\r\n              loading={loading}\r\n              type=\"success\"\r\n              onClick={loginAuth}\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </Layout.Col>\r\n      </Layout.Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingIn;\r\n",["63"],"D:\\Projetos\\React\\registrador-horas-trabalhadas-frontend\\src\\services\\api.ts",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":42,"column":6,"nodeType":"68","endLine":42,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":32,"nodeType":"72","messageId":"73","endLine":2,"endColumn":38},{"ruleId":"70","severity":1,"message":"74","line":19,"column":10,"nodeType":"72","messageId":"73","endLine":19,"endColumn":14},{"ruleId":"70","severity":1,"message":"75","line":19,"column":16,"nodeType":"72","messageId":"73","endLine":19,"endColumn":23},{"ruleId":"66","severity":1,"message":"76","line":167,"column":6,"nodeType":"68","endLine":167,"endColumn":19,"suggestions":"77"},{"ruleId":"70","severity":1,"message":"78","line":26,"column":10,"nodeType":"72","messageId":"73","endLine":26,"endColumn":17},{"ruleId":"70","severity":1,"message":"79","line":26,"column":19,"nodeType":"72","messageId":"73","endLine":26,"endColumn":29},{"ruleId":"66","severity":1,"message":"80","line":158,"column":6,"nodeType":"68","endLine":158,"endColumn":8,"suggestions":"81"},{"ruleId":"70","severity":1,"message":"82","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":6,"column":1,"nodeType":"85","endLine":6,"endColumn":47},{"ruleId":"83","severity":1,"message":"86","line":9,"column":1,"nodeType":"85","endLine":9,"endColumn":49},{"ruleId":"64","replacedBy":"87"},"jsx-a11y/accessible-emoji",[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["88"],"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createWeeks' and 'fetchWeekTotal'. Either include them or remove the dependency array.",["89"],"'popover' is assigned a value but never used.","'setPopover' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array.",["90"],"'useEffect' is defined but never used.","import-helpers/order-imports","There should be no empty line within import group","ImportDeclaration","`./../../assets/Logo-dark.png` import should occur before import of `./../../services/api`",[],{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [history]",{"range":"97","text":"98"},"Update the dependencies array to be: [createWeeks, currentWeek, fetchWeekTotal]",{"range":"99","text":"100"},"Update the dependencies array to be: [date]",{"range":"101","text":"102"},[1034,1036],"[history]",[4633,4646],"[createWeeks, currentWeek, fetchWeekTotal]",[4144,4146],"[date]"]